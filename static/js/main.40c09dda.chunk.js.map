{"version":3,"sources":["gitUser.js","movieCard.js","movieapi.js","api-key.js","covid19api.js","covid19country.js","NotFound.js","movieDetail.js","stockapi.js","covid19province.js","App.js","serviceWorker.js","index.js"],"names":["gitUser","state","user","loading","error","searchUser","searchForUser","e","preventDefault","console","log","fetch","then","res","json","data","setState","catch","err","inputData","target","value","this","login","avatar_url","className","onSubmit","type","onChange","src","alt","React","Component","MovieCard","props","movie","map","idx","key","to","imdbID","Title","Movie","response","res_error","movies","searchForMovie","Response","Error","Search","Youtube","global","date","countries","Countries","Global","Date","NewConfirmed","NewDeaths","NewRecovered","TotalConfirmed","TotalDeaths","TotalRecovered","substr","parseInt","toLocaleString","c","CountryCode","Slug","Country","Covid19country","detail","CountryName","match","params","code","split","word","charAt","toUpperCase","slice","join","width","substring","Confirmed","Deaths","Recovered","Active","NotFound","MovieDetail","Poster","StockExchange","stocks","Covid19province","province","Province","Links","exact","App","path","component","Stock","Covid19","GitUser","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.40c09dda.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class gitUser extends React.Component {\r\n    state = {\r\n        user: {},\r\n        loading: false,\r\n        error: false,\r\n        searchUser: ''\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     fetch('https://api.github.com/users/t1mwillis')\r\n    //         .then(res => res.json())\r\n    //         .then(data => this.setState({ user: data, loading: false }))\r\n    //         .catch(err => this.setState({ loading: false, error: true }));\r\n    // }\r\n\r\n    searchForUser = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.searchUser);\r\n        fetch(`https://api.github.com/users/${this.state.searchUser}`)\r\n            .then(res => res.json())\r\n            // .then(data => this.setState({ user: data, loading: false }))\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({ user: data, loading: false, searchUser: '' })\r\n            })\r\n            .catch(err => this.setState({ loading: false, error: true }));\r\n    }\r\n\r\n    inputData = (e) => {\r\n        this.setState({ searchUser: e.target.value })\r\n    }\r\n    render() {\r\n        const { login, avatar_url } = this.state.user;\r\n\r\n        if (this.state.error) {\r\n            return <div>Problem loading the page.</div>\r\n        }\r\n        if (this.state.loading) {\r\n            return <div>......... loading page...</div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>User</h1>\r\n                <form className=\"search-form\" onSubmit={this.searchForUser}>\r\n                    <input type=\"text\" value={this.state.searchUser}\r\n                        onChange={this.inputData} />\r\n                    <button type=\"submit\"> Search </button>\r\n                </form>\r\n                <p>{login}</p>\r\n                <img src={avatar_url} alt={login} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst MovieCard = (props) => {\r\n    return (\r\n        <div>\r\n            {props.movie.map((movie, idx) =>\r\n                < li key={idx} >\r\n                    {/* <button type=\"button\" onClick={getDetail}>{movie.Title}</button> */}\r\n                    < Link to={`/movie/${movie.imdbID}`}>{movie.Title}</Link>\r\n                </li >\r\n            )}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MovieCard;","import React from 'react';\r\nimport MovieCard from './movieCard';\r\nimport { API_KEY } from './api-key';\r\n\r\n// fetch('http://www.omdbapi.com/?apikey=' + API_KEY + '&s=batman')\r\n//     // fetch('http://www.omdbapi.com/?apikey=d924b900&s=batman')\r\n//     .then(res => res.json())\r\n//     .then(data => console.log(data));\r\n\r\nexport default class Movie extends React.Component {\r\n    state = {\r\n        response: '',\r\n        res_error: '',\r\n        movies: [],\r\n        loading: false,\r\n        error: false,\r\n        movie: ''\r\n    }\r\n\r\n    searchForMovie = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.movies);\r\n\r\n        this.setState({ loading: true }, () => {\r\n            fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&s=${this.state.movie}`)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data);\r\n                    console.log(data.Response);\r\n                    console.log(data.Error);\r\n                    this.setState({ movies: data.Search, response: data.Response, res_error: data.Error, loading: false })\r\n                })\r\n                .catch(err => this.setState({ loading: false, error: true })\r\n                );\r\n        });\r\n    }\r\n\r\n    inputData = (e) => {\r\n        this.setState({ movie: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state);\r\n        const { movies, response, res_error } = this.state;\r\n\r\n        if (this.state.loading) {\r\n            return <div>....loading</div>;\r\n        }\r\n\r\n        if (this.state.error) {\r\n            return <div>An error occurred. Please contact your system administrator </div>;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Search your movie</h1>\r\n                <form className=\"search-form\" onSubmit={this.searchForMovie}>\r\n                    <input type=\"text\" value={this.state.movie} onChange={this.inputData} />\r\n                    <button type=\"submit\"> Search </button>\r\n                </form>\r\n                <ol>\r\n                    {/* < Card movie={movies} /> */}\r\n                    {response === 'True' ? < MovieCard movie={movies} /> : (<p> {res_error} </p>)}\r\n                </ol>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const API_KEY = 'd924b900';\r\nconst YOUTUBE_API_KEY = 'AIzaSyDTBYKevRB-f3WPOTYbhBYPPw-DDvM8t2U';\r\nconst TOKEN = 'Tpk_75d790f2b76d4a679397fb709159c807';\r\n\r\nexport { YOUTUBE_API_KEY, API_KEY, TOKEN };\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Youtube extends Component {\r\n    state = {\r\n        global: {},\r\n        date: '',\r\n        countries: [],\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://api.covid19api.com/summary')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // consol?e.log(data);\r\n                // console.log(data.Error);\r\n                this.setState({ countries: data.Countries, global: data.Global, date: data.Date, loading: false, error: false })\r\n            }\r\n            )\r\n            .catch(err => this.setState({ loading: false, error: true }))\r\n    }\r\n\r\n    render() {\r\n        const { NewConfirmed, NewDeaths, NewRecovered, TotalConfirmed, TotalDeaths, TotalRecovered } = this.state.global;\r\n\r\n        if (this.state.loading) {\r\n            return <div>....loading</div>;\r\n        }\r\n\r\n        if (this.state.error) {\r\n            return <div> Try to reload again! </div>;\r\n        }\r\n\r\n        return (\r\n            <main>\r\n                <h1>Year 2020 came with a virus. Please undo it!</h1>\r\n                <h3> As of {this.state.date.substr(0, 10)}</h3>\r\n                <nav>\r\n                    <div>New Confirmed={parseInt(NewConfirmed).toLocaleString()} </div>\r\n                    <div>New Deaths={parseInt(NewDeaths).toLocaleString()}</div>\r\n                    <div> New Recovered={parseInt(NewRecovered).toLocaleString()}</div>\r\n                    <div>Total Confirmed={parseInt(TotalConfirmed).toLocaleString()}</div>\r\n                    <div>Total Deaths={parseInt(TotalDeaths).toLocaleString()}</div>\r\n                    <div>Total Recovered={parseInt(TotalRecovered).toLocaleString()}</div>\r\n                </nav>\r\n                <div className=\"box\">\r\n                    {this.state.countries.map((c) => (\r\n                        < div key={c.CountryCode} >\r\n                            <Link to={`/covid19/${c.Slug}/${c.CountryCode}`}>\r\n                                <img src={`https://www.countryflags.io/${c.CountryCode}/flat/64.png`} alt=\"flag\" />\r\n                                {c.Country}\r\n                            </Link>\r\n                          Total Confirmed =  <span>  {parseInt(c.TotalConfirmed).toLocaleString()} </span>\r\n                        </div >\r\n                    )\r\n                    )\r\n                    }\r\n                </div>\r\n            </main >\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Covid19country extends React.Component {\r\n    state = {\r\n        detail: [],\r\n        Country: '',\r\n        loading: true,\r\n        error: false\r\n        , CountryName: ''\r\n        , CountryCode: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.props);\r\n        const { CountryName, CountryCode } = this.props.match.params;\r\n        this.setState({ CountryName: CountryName, CountryCode: CountryCode })\r\n\r\n        const code = CountryName.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\r\n        this.setState({ Country: code })\r\n\r\n        fetch(`https://api.covid19api.com/total/country/${CountryName}`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data.Error);\r\n                this.setState({ detail: data, loading: false, error: false })\r\n            }\r\n            )\r\n            .catch(err => this.setState({ loading: false, error: true }))\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.CountryName);\r\n        if (this.state.loading) {\r\n            return <div>....loading</div>;\r\n        }\r\n\r\n        if (this.state.error) {\r\n            return <div> Try to reload again! </div>;\r\n        }\r\n        return (\r\n            <>\r\n                {< img src={`https://www.countryflags.io/${this.state.CountryCode}/flat/64.png`} width=\"200px\" alt=\"flag\" />}\r\n\r\n                <Link to={`/covid19/${this.state.CountryName}/${this.state.CountryCode}/Province`}> <h2>***   {this.state.Country} ***</h2> </Link>\r\n\r\n                <div className=\"detail\">\r\n                    {this.state.detail.map((c, idx) =>\r\n                        <div key={idx}>\r\n                            <b>{c.Date.substring(0, 10)} Total={parseInt(c.Confirmed).toLocaleString()} </b>\r\n                        ( <span>Death={parseInt(c.Deaths).toLocaleString()}</span> Recovered={parseInt(c.Recovered).toLocaleString()} Active={parseInt(c.Active).toLocaleString()} )\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n\r\n    return (\r\n        <h1>Page Not Found!  Please contact your Administrator</h1>\r\n    )\r\n\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { API_KEY } from './api-key';\r\n\r\nclass MovieDetail extends React.Component {\r\n    state = { detail: {} }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        const { imdbID } = this.props.match.params;\r\n        console.log(imdbID);\r\n\r\n        fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${imdbID}`)\r\n            .then(res => res.json())\r\n            // .then(data => console.log(data));\r\n            .then(data => this.setState({ detail: data }));\r\n    }\r\n\r\n    render() {\r\n        const { detail } = this.state;\r\n        return (\r\n            <div>\r\n                <h1> {detail.Title}</h1>\r\n                <img src={detail.Poster} alt={`${detail.Title} poster`} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default MovieDetail;","import React from 'react';\r\nimport { TOKEN } from './api-key';\r\n\r\nconst symbol = 'aapl,ba,bac,c,cost,fb,goog,ibm,sbux,wfc,xom';\r\n// console.log(TOKEN);\r\n\r\nexport default class StockExchange extends React.Component {\r\n    state = {\r\n        stocks: {}\r\n    }\r\n    componentDidMount() {\r\n        fetch(`https://sandbox.iexapis.com/v1/stock/market/batch?types=quote&symbols=${symbol}&range=5y&token=Tpk_75d790f2b76d4a679397fb709159c807`)\r\n            // fetch(`https://sandbox.iexapis.com/stable/stock/${symbol}/quote?token=Tpk_75d790f2b76d4a679397fb709159c807`)\r\n            //fetch(`https://sandbox.iexapis.com/stable/stock/${symbol}/quote?token=${TOKEN}`)\r\n            .then(res => res.json())\r\n            .then(data => this.setState({ stocks: data }));\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state);\r\n\r\n        return (\r\n            <div>\r\n                <h1>Stock </h1>\r\n                {/* {this.state.stocks.map(s => (\r\n                    <div>\r\n                        {}\r\n                    </div>\r\n\r\n                ))} */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Covid19province extends React.Component {\r\n    state = {\r\n        detail: [],\r\n        Country: '',\r\n        province: '',\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { CountryName, CountryCode } = this.props.match.params;\r\n        this.setState({ CountryName: CountryName, CountryCode: CountryCode })\r\n\r\n        const code = CountryName.split('-').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\r\n        this.setState({ Country: code })\r\n\r\n        fetch(`https://api.covid19api.com/live/country/${CountryName}/status/confirmed`)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data);\r\n                this.setState({ detail: data, loading: false, error: false })\r\n            }\r\n            )\r\n            .catch(err => this.setState({ loading: false, error: true }))\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <div>....loading</div>;\r\n        }\r\n\r\n        if (this.state.error) {\r\n            return <div> Try to reload again! </div>;\r\n        }\r\n        return (\r\n            <>\r\n                <h2>***   {this.state.Country} ***</h2>\r\n                <table className=\"table table-striped\" >\r\n\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date</th> <th>Province</th> <th>Confirmed</th> <th>Death</th> <th>Recovered</th> <th>Active</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>  {this.state.detail.map((c, idx) =>\r\n                        <tr key={idx}>\r\n                            <td> {c.Date.substring(0, 10)}</td>\r\n                            <td> {c.Province}</td>\r\n                            <td> {parseInt(c.Confirmed).toLocaleString()} </td>\r\n                            <td> {parseInt(c.Deaths).toLocaleString()} </td>\r\n                            <td>{parseInt(c.Recovered).toLocaleString()} </td>\r\n                            <td>{parseInt(c.Active).toLocaleString()}</td>\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","\nimport React from 'react';\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom';\nimport './App.css';\nimport GitUser from './gitUser';\nimport Movie from './movieapi';\nimport Covid19 from './covid19api';\nimport Covid19country from './covid19country';\nimport NotFound from './NotFound';\nimport MovieDetail from './movieDetail';\nimport Stock from './stockapi';\nimport Covid19province from './covid19province';\n\n// const Home = () => (\n//   <h1>Home</h1>\n// )\n\nconst Links = () => (\n  <ul>\n    <li><NavLink exact to=\"/\">Stock</NavLink></li>\n    <li><NavLink to=\"/covid19\">Covid19</NavLink></li>\n    <li><NavLink to=\"/movie\">Movie</NavLink></li>\n    <li><NavLink to=\"/user\">User</NavLink></li>\n  </ul>\n);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <header> <Links /></header>\n        <Switch>\n          <Route exact path=\"/\" component={Stock} />\n          <Route exact path=\"/covid19\" component={Covid19} />\n          <Route exact path=\"/covid19/:CountryName/:CountryCode\" component={Covid19country} />\n          <Route exact path=\"/covid19/:CountryName/:CountryCode/province\" component={Covid19province} />\n          <Route exact path=\"/movie\" component={Movie} />\n          <Route exact path=\"/movie/:imdbID\" component={MovieDetail} />\n          <Route exact path=\"/user\" component={GitUser} />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}